How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Fill in your answer here

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Fill in your answer here

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Fill in your answer here

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Fill in your answer here

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here

从长远来看，能轻松访问文件的整个历史记录将如何提高编程者的效率？
  追溯变更，找到问题出在什么地方。

你认为，手动选择何时创建提交（像在 Git 中做的那样）与自动保存版本（如 Google Docs 所做的那样）各有何优缺点？
手工提交：优点是能够选择一个合适的逻辑变更作为提交单元；缺点是需要人工判断时机点和操作，麻烦一些。
自动保存：优点是省去了人工操作；缺点是每次提交未必有完整的逻辑意义。

为何你认为一些版本控制系统（例如 Git）允许在一次提交中保存多个文件，而其他系统（例如 Google Docs）单独对待每个文件？
 因为版本控制系统关注的文件关联后的状态，而其他系统只是针对单个文件的变更关注，文件间没有关系。

如何使用命令 git log 和 git diff 来查看文件的历史记录？
git log <file_name> 查看文件的历史记录
git diff <old_version> <new_version> 比较两个版本的差异

使用版本控制，如何让你更有信心进行有可能会造成破坏的更改？
及时提交每次逻辑更改，遇到错误时利用git checkout <old_id>定位

现在你已设置了工作空间，你想尝试使用 Git 来做些什么？
commit, find diff between commits


